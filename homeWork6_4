using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace homeWork6_4._1
{
    class Program
    {
        private const string TakeCard = "1";
        private const string ShowCards = "2";
        private const string ExitProgramm = "3";
        static void Main(string[] args)
        {
            Console.WriteLine("Мы приветствуем вас за нашим игральным столом!\nВы можете взять в руку до 6 карт, после чего начнется игра!");
            Console.WriteLine();
            Console.SetCursorPosition(35, 2);
            Console.WriteLine("Меню комманд:");
            Console.WriteLine(TakeCard + " - Взять карту из колоды");
            Console.WriteLine(ShowCards + " - Показать все карты на руке игрока");
            Console.WriteLine(ExitProgramm + " - Выход из программы");
            Console.WriteLine();
            CardDeck cardDeck = new CardDeck();
            Player player = new Player();
            bool isWork = true;
            int maxCountCard = 6;

            cardDeck.Fill();
            cardDeck.Shuffle();

            while (isWork)
            {
                string userInput = Console.ReadLine();

                switch (userInput)
                {
                    case TakeCard:
                        player.AddCard(cardDeck.DeleteCard(), maxCountCard);
                        break;

                    case ShowCards:
                        player.ShowCards();
                        break;

                    case ExitProgramm:
                        isWork = false;
                        break;
                }
            }
        }
    }

    class CardDeck
    {
        private static int _deckSize = 36;
        private List<Card> _card = new List<Card>(_deckSize);                
        
        public void Fill()
        {
            string[] title = { "Пик", "Крестей", "Бубей", "Червей" };
            string[] mean = { "6", "7", "8", "9", "10", "Валет", "Дама", "Король", "Туз" };

            for (int i = 0; i < title.Length; i++)
            {
                for (int j = 0; j < mean.Length; j++)
                {
                    _card.Add(new Card(title[i], mean[j]));
                }
            }          
        }

        public void Shuffle()
        {
            Random random = new Random();
            Card tempCard;

            for (int i = 0; i < _card.Count; i++)
            {              
                int firstCard = random.Next(_card.Count);
                int secondCard = random.Next(_card.Count);
                tempCard = _card[firstCard];
                _card[firstCard] = _card[secondCard];
                _card[secondCard] = tempCard;
            }
        }

        public Card DeleteCard()
        {
            Card card = _card[0];
            _card.Remove(card);
            return card;
        }
    }

    class Card
    {
        public string Name { get; private set; }
        public string Value { get; private set; }

        public Card(string name, string value)
        {
            Name = name;
            Value = value;
        }
    }

    class Player
    {
        private List<Card> _handCards = new List<Card>();

        public void AddCard(Card _card, int count)
        {
            if (_handCards.Count < count)
            {
                _handCards.Add(_card);               
            }
            else
            {
                Console.WriteLine("У вас полный набор карт на руке.");
            }
        }

        public void ShowCards()
        {
            foreach (Card card in _handCards)
            {               
                Console.WriteLine(card.Name + " - " + card.Value);
            }          
        }
    }   
}
