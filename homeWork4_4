using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace homeWork4_5_1
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.CursorVisible = false;
            bool isGaming = true;
            int pacManXPosition = 5;
            int pacManYPosition = 4;
            int pacManDirectionX = 0;
            int pacManDirectionY = 0;
            char[,] map =
            {
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ',' ',' ','#','#','#','#','#','#','#',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','!',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#','#',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ','#',' ','!',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','!',' ','#','#','#',' ','#'},
                {'#',' ',' ','#',' ',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#',' ','#',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','!',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#','#','#',' ','#'},
                {'#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ',' ','#',' ',' ','#','#','#','#','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','!',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#','!',' ',' ',' ',' ',' ','!',' ',' ',' ',' ','#',' ',' ','!',' ',' ','#','#','#','#','#','#','#','#','#',' ',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'}
            };
            DrawMap(map);
            Console.SetCursorPosition(pacManYPosition, pacManXPosition);
            Console.Write('@');

            while (isGaming)
            {
                if (Console.KeyAvailable)
                {
                    ConsoleKeyInfo key = Console.ReadKey(true);
                    ChangeDirection(key, ref pacManDirectionX, ref pacManDirectionY);
                }

                if (map[pacManXPosition + pacManDirectionX, pacManYPosition + pacManDirectionY] == '!')
                {
                    LoseTheGame(ref pacManXPosition, ref pacManYPosition, ref pacManDirectionX, ref pacManDirectionY);
                    break;
                }

                if (map[pacManXPosition + pacManDirectionX, pacManYPosition + pacManDirectionY] != '#')
                {
                    MovePlayer(ref pacManXPosition, ref pacManYPosition, pacManDirectionX, pacManDirectionY);                    
                }
                System.Threading.Thread.Sleep(200);                
            }
        }


        static void DrawMap(char[,] map)
        {
            Console.SetCursorPosition(0, 0);
            for (int i = 0; i < map.GetLength(0); i++)
            {
                for (int j = 0; j < map.GetLength(1); j++)
                {
                    Console.Write(map[i, j]);
                }
                Console.WriteLine();
            }
        }

        static void ChangeDirection(ConsoleKeyInfo key, ref int pacManDirectionX, ref int pacManDirectionY)
        {
            switch (key.Key)
            {
                case ConsoleKey.UpArrow:
                    pacManDirectionX = -1; 
                    pacManDirectionY = 0;
                    break;

                case ConsoleKey.DownArrow:
                    pacManDirectionX = 1; 
                    pacManDirectionY = 0;
                    break;

                case ConsoleKey.LeftArrow:
                    pacManDirectionX = 0; 
                    pacManDirectionY = -1;
                    break;

                case ConsoleKey.RightArrow:
                    pacManDirectionX = 0; 
                    pacManDirectionY = 1;
                    break;
            }
        }

        static void LoseTheGame(ref int pacmanX, ref int pacmanY, ref int directionX, ref int directionY)
        {
            Console.SetCursorPosition(pacmanY + directionY, pacmanX + directionX);
            Console.Write(" ");
            Console.SetCursorPosition(20, 20);
            Console.ForegroundColor = ConsoleColor.Red;
            Console.WriteLine("Вы проиграли!!!");
            Console.WriteLine();
        }

        static void MovePlayer(ref int pacmanX, ref int pacmanY, int changingThePositionX, int changingThePositionY)
        {
            Console.SetCursorPosition(pacmanY, pacmanX);
            Console.Write(" ");

            pacmanX += changingThePositionX;
            pacmanY += changingThePositionY;

            Console.SetCursorPosition(pacmanY, pacmanX);
            Console.Write('@');
        }
    }
}
