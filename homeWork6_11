using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace homeWork6_11
{
    class Program
    {
        private const string CommandAddFish = "1";
        private const string CommandShowFish = "2";
        private const string CommandRemoveFish = "3";
        static void Main(string[] args)
        {
            Aquarium aquarium = new Aquarium();
            bool isWork = true;

            while (isWork)
            {
                Console.WriteLine("Меню программы:");
                Console.WriteLine("Добавить рыбу в аквариум - " + CommandAddFish + "\nПоказать всех рыб в аквариуме - " + CommandShowFish + "\nУдалить рыбу по порядковому номеру - " + CommandRemoveFish);
                string message = Console.ReadLine();

                switch (message)
                {
                    case CommandAddFish:
                        aquarium.AddFish();
                        break;

                    case CommandShowFish:
                        aquarium.Show();
                        break;

                    case CommandRemoveFish:
                        aquarium.RemoveFish();
                        break;

                    default:
                        Console.WriteLine("Вы ввели не существующую команду, повторите ввод!");
                        break;
                }
                aquarium.RemoveDeadFish();
            }
        }
    }

    class Aquarium
    {
        private static readonly Random _random = new Random();
        private List<Fish> _fishes = new List<Fish>();
        private int _maxCountFish = 10;

        public Aquarium()
        {
            Fill();
            Console.WriteLine("Аквариум готов и заполнен рыбой.");
            Console.WriteLine();
        }

        public void Show()
        {
            for (int i = 0; i < _fishes.Count; i++)
            {
                Console.Write(i + 1 + " - ");
                _fishes[i].ShowInfo();
            }
            SkipYear();
            Console.WriteLine();
        }

        public void RemoveFish()
        {
            Console.WriteLine("Введите номер рыбы, которую желаете удалить из аквариума:");
            int inputNumber = UserUtilities.ReadPositiveInt();

            if (inputNumber > 0 && inputNumber - 1 < _fishes.Count)
            {
                _fishes.RemoveAt(inputNumber - 1);
                Console.WriteLine("Данная рыба была извлечена из аквариума");
                Console.WriteLine();
            }
            else
            {
                Console.WriteLine("Рыбы с таким номером в аквариуме нет!");
            }
        }

        public void AddFish()
        {
            if (_fishes.Count < _maxCountFish)
            {
                _fishes.Add(IdentifyFish());
                Console.WriteLine("Рыба добавлена в аквариум");
            }
            else
            {
                Console.WriteLine("Пока нет места для новых рыбок!");
            }
        }

        public void RemoveDeadFish()
        {
            Fish fish;

            for (int i = 0; i < _fishes.Count; i++)
            {
                if (_fishes[i].Age == _fishes[i].LifeTime)
                {
                    fish = _fishes[i];
                    _fishes.Remove(fish);
                    i--;
                }
            }
        }

        public void SkipYear()
        {
            foreach (var fish in _fishes)
            {
                fish.GrowOld();
            }
        }

        private void Fill()
        {
            for (int i = 0; i < _maxCountFish; i++)
            {
                _fishes.Add(IdentifyFish());
            }
        }

        private Fish IdentifyFish()
        {
            List<Fish> allFishes = new List<Fish>();
            allFishes.Add(new Fish("Неон", 6));
            allFishes.Add(new Fish("Скалярия", 10));
            allFishes.Add(new Fish("Брабус", 15));
            allFishes.Add(new Fish("Гуппи", 5));
            allFishes.Add(new Fish("Сом", 25));
            return allFishes[_random.Next(0, allFishes.Count)];
        }
    }

    class Fish
    {
        public string Name { get; private set; }
        public int Age { get; private set; }
        public int LifeTime { get; private set; }

        public Fish(string name, int lifeTime)
        {
            Name = name;
            LifeTime = lifeTime;
            Age = 0;
        }

        public void ShowInfo()
        {
            Console.WriteLine(Name + " возраст - " + Age + ", максимальный возраст - " + LifeTime + " лет");
        }

        public void GrowOld()
        {
            Age++;
        }
    }

    static class UserUtilities
    {
        public static int ReadPositiveInt()
        {
            int resalt = 0;
            bool isWork = true;

            while (isWork)
            {
                string userInput = Console.ReadLine();
                bool isSuccess = int.TryParse(userInput, out int inputNumber);

                if (inputNumber >= 0 && isSuccess == true)
                {
                    resalt = inputNumber;
                    isWork = false;
                }
                else
                {
                    Console.WriteLine("Не верный ввод. Введите положительное число!");
                }
            }
            return resalt;
        }
    }
}
