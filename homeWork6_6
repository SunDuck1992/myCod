using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace homeWork6_6
{
    class Program
    {
        private const string CommandShowAllProducts = "1";
        private const string CommandSellProduct = "2";
        private const string CommandShowBuyProducts = "3";
        private const string CommandExit = "4";

        static void Main(string[] args)
        {
            Buyer buyer = new Buyer();
            Seller seller = new Seller();
            Console.SetCursorPosition(40, 0);
            Console.WriteLine("Магазин продуктов:");
            Console.WriteLine("Меню магазина:");
            Console.WriteLine(CommandShowAllProducts + " - Показать весь товар магазина\n" + CommandSellProduct + " - Продажа товара\n" +
                CommandShowBuyProducts + " - Показать мои покупки");
            Console.WriteLine();
            Console.WriteLine("В магазин пришел покупатель, у него " + buyer.Money + " - рублей");
            bool isWork = true;

            seller.FillStore();

            while (isWork)
            {
                string userInput = Console.ReadLine();

                switch (userInput)
                {
                    case CommandShowAllProducts:
                        seller.ShowInfo();
                        break;

                    case CommandSellProduct:
                        seller.Sell(buyer);
                        break;

                    case CommandShowBuyProducts:
                        buyer.ShowInventory();
                        break;

                    case CommandExit:
                        isWork = false;
                        break;

                    default:
                        Console.WriteLine("Не верный ввод. Такая команда отсутствует!");
                        break;
                }
            }
        }
    }

    class Buyer
    {
        private Random _random = new Random();
        private List<Product> _inventory = new List<Product>();
        private int _moneyToPay;
        private int minMoney = 200;
        private int maxMoney = 1000;
        public int Money { get; private set; }

        public Buyer()
        {
            Money = _random.Next(minMoney, maxMoney);
        }

        public void ShowInventory()
        {
            Console.WriteLine("Ваши покупки:");

            foreach (var item in _inventory)
            {
                Console.WriteLine(item.Name);
            }
        }

        public void AddItem(Product product)
        {
            _inventory.Add(product);
        }

        public bool IsSolvency(Stack stack)
        {
            _moneyToPay = stack.Product.Price;

            if (stack.Count <= 0)
            {
                Console.WriteLine("Продукт закончился в магазине. Приходите в другой раз!");
                return false;
            }

            if (Money >= _moneyToPay && stack.Count > 0)
            {
                return true;
            }
            else
            {
                Console.WriteLine("У вас нет денег. Приходите в другой раз!");
                _moneyToPay = 0;
                return false;
            }
        }

        public void GiveMoney()
        {
            Money -= _moneyToPay;
        }
    }


    class Stack
    {
        private static int _countID = 0;
        public Product Product { get; private set; }
        public int ID { get; private set; }
        public int Count { get; private set; }

        public Stack(Product product, int count)
        {
            Product = product;
            Count = count;
            _countID++;
            ID = _countID;
        }

        public bool Remove(int count)
        {
            if (Count - count < 0)
            {
                return false;
            }
            else
            {
                Count--;
                return true;
            }
        }
    }

    class Seller
    {
        private List<Stack> _products = new List<Stack>();
        private Random _random = new Random();

        Stack GetStack(int ID)
        {
            foreach (var stack in _products)
            {
                if (stack.ID == ID)
                {
                    return stack;
                }
            }
            return null;
        }

        public void FillStore()
        {
            _products.Add(new Stack(new Product("Молоко", 60), _random.Next(1, 5)));
            _products.Add(new Stack(new Product("Хлеб", 35), _random.Next(1, 5)));
            _products.Add(new Stack(new Product("Тушенка", 120), _random.Next(1, 5)));
            _products.Add(new Stack(new Product("Яйца", 50), _random.Next(1, 5)));
            _products.Add(new Stack(new Product("Йогурт", 40), _random.Next(1, 5)));
            _products.Add(new Stack(new Product("Сметана", 50), _random.Next(1, 5)));
            _products.Add(new Stack(new Product("Творог", 80), _random.Next(1, 5)));
            _products.Add(new Stack(new Product("Печенье", 100), _random.Next(1, 5)));
            _products.Add(new Stack(new Product("Шоколад", 80), _random.Next(1, 5)));
            _products.Add(new Stack(new Product("Чай", 100), _random.Next(1, 5)));
            _products.Add(new Stack(new Product("Колбаса", 200), _random.Next(1, 5)));
            _products.Add(new Stack(new Product("Сыр", 150), _random.Next(1, 5)));
            _products.Add(new Stack(new Product("Сельдь", 100), _random.Next(1, 5)));
            _products.Add(new Stack(new Product("Батончик", 60), _random.Next(1, 5)));
        }

        public void ShowInfo()
        {
            Console.WriteLine("Товары в наличии:");

            foreach (var stack in _products)
            {
                Console.WriteLine(stack.ID + " - " + stack.Product.Name + " - цена " + stack.Product.Price + " рублей, количество - " + stack.Count + " шт.");
            }
        }

        public void Sell(Buyer buyer)
        {
            Console.WriteLine("Ваши деньги " + buyer.Money + " - рублей");
            Console.WriteLine("Что вы хотите купить?");
            int userInput = UserUtilities.ReadInt();
            Stack stack = GetStack(userInput);

            if (stack == null)
            {
                return;
            }

            if (buyer.IsSolvency(stack))
            {
                buyer.AddItem(stack.Product);
                buyer.GiveMoney();
                stack.Remove(1);
                Console.WriteLine("Вы купили товар!");
            }
        }
    }

    class Product
    {
        public string Name { get; private set; }
        public int Price { get; private set; }

        public Product(string name, int price)
        {
            Name = name;
            Price = price;
        }
    }

    static class UserUtilities
    {
        public static int ReadInt()
        {
            int resalt = 0;
            bool isWork = true;

            while (isWork)
            {
                string userInput = Console.ReadLine();
                bool success = int.TryParse(userInput, out int number);

                if (success == true && number > 0)
                {
                    resalt = number;
                    isWork = false;
                }
            }
            return resalt;
        }
    }
}
